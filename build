#!/usr/bin/env python

import os
from fabricate import *

slag_dir = 'slag'
include_dirs = ['/opt/local/include']
lib_dirs = ['/opt/local/lib']
libs = ['m', 'boost_thread-mt']
extra_flags = ['-g', '-I', '.']

cppflags = ['-I' + x for x in include_dirs] + extra_flags
ldflags = ['-L' + x for x in lib_dirs] + ['-l' + x for x in libs]

def compile(cppfile, more_flags = []):
	objdir = os.path.dirname(cppfile)
	run('mkdir', '-p', slag_dir + '/' + objdir)
	objfile = slag_dir + '/' + cppfile.replace('.cpp', '.o').replace('.cc', '.o')
	run('g++', '-o', objfile, '-c', cppfile, *(cppflags + more_flags))
	return objfile

def compile_dir(thedir, more_flags = []):
	return [compile(thedir + '/' + x, more_flags) for x in os.listdir(thedir) if x.endswith('.cpp')]

def link_objs(out, objs):
	run('g++', '-o', out, *(objs + ldflags))

def build():
	lib_objs = compile_dir('src')
	test_objs = [compile('test_btree.cpp', ['-I', 'src'])]
	run('mkdir', '-p', 'out')
	link_objs('out/test', lib_objs + test_objs)
	
main()
